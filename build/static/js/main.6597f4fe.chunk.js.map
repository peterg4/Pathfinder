{"version":3,"sources":["index.js"],"names":["GLOBAL_XMAX","parseInt","window","innerWidth","GLOBAL_YMAX","innerHeight","GLOBAL_XGOAL","GLOBAL_YGOAL","randomIntFromInterval","min","max","Math","floor","random","Square","props","y","x","id","location","className","onClick","onMouseUp","onMouseDown","onMouseOver","console","log","Board","square_board","shift","j","row","i","push","state","squares","xStart","yStart","drawOption","isEraser","isRunning","this","document","getElementById","setState","o","length","slice","midx","midy","xmax","ymax","xmin","ymin","resetState","initialize","setInterval","possible_xmids","possible_ymids","clearInterval","k","generateMaze","new_midx","new_midy","holex1","holex2","holey","holey2","divide","a","choice","walls","checkQueue","carveMaze","wall","checkPrims","splice","queue","resetWalls","paths","Map","set","timer","search","ii","find_path","next","get","split","dist","dist_origin","dist_end","abs","open_list","sort","b","classList","add","remove","undefined","isMouseDown","value","moveStart","clas","class","addWall","toggleMouseDown","toggleMouseUp","isWalls","items","renderSquare","board_","entries","index","href","src","NavButton","variant","color","toggleWall","toggleWeight","toggleErase","BFS","A_star","StartMaze","Prims","ClearButton","status","React","Component","withStyles","root","margin","background","Button","maxHeight","width","whiteSpace","Game","domContainer","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.6597f4fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nlet GLOBAL_XMAX = parseInt((window.innerWidth-100)/25);\r\nGLOBAL_XMAX % 2 == 0 ? GLOBAL_XMAX++: GLOBAL_XMAX+=0;\r\nlet GLOBAL_YMAX = parseInt((window.innerHeight-100)/25);\r\nGLOBAL_YMAX % 2 == 0 ? GLOBAL_YMAX++: GLOBAL_YMAX+=0;\r\nconst GLOBAL_XGOAL = parseInt(GLOBAL_XMAX*.70);\r\nconst GLOBAL_YGOAL = parseInt(GLOBAL_YMAX*(3/4));\r\nfunction randomIntFromInterval(min, max) { // min and max included \r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nconsole.log(GLOBAL_XMAX, GLOBAL_YMAX)\r\nfunction Square(props) {\r\n    if(props.y==GLOBAL_YGOAL && props.x == GLOBAL_XGOAL) {\r\n        return (\r\n            <button id={props.location} className={'green square'} onClick={props.onClick} onMouseUp={props.onMouseUp} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver}></button>\r\n        );\r\n    } \r\n    if(props.y==5 && props.x ==5){\r\n        return (\r\n            <button id={props.location} className={'start square'} onClick={props.onClick} onMouseUp={props.onMouseUp} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver}></button>\r\n        );\r\n    }\r\n    return (\r\n        <button id={props.location} className={'square'} onClick={props.onClick} onMouseUp={props.onMouseUp} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver}></button>\r\n    );\r\n  }\r\n\r\nclass Board extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var square_board = [[]];\r\n        square_board.shift();\r\n        for(var j = 0; j < GLOBAL_YMAX; j++){  \r\n            var row = [];\r\n            for(var i = 0; i < GLOBAL_XMAX; i++){\r\n                if(i === GLOBAL_XGOAL && j === GLOBAL_YGOAL)\r\n                    row.push('green')\r\n                else \r\n                    row.push(null);\r\n            }\r\n            square_board.push(row);\r\n        }\r\n        var xStart = 5;\r\n        var yStart = 5;\r\n        var isRunning = false;\r\n        square_board[xStart][yStart] = 'start';\r\n        this.state = {\r\n            squares: square_board,\r\n            xStart: xStart,\r\n            yStart: yStart,\r\n            drawOption: 0,\r\n            isEraser: false,\r\n            isRunning: isRunning,\r\n        };\r\n    }\r\n    resetState(){\r\n        if(this.isRunning)\r\n            return;\r\n        console.log('clearing...');\r\n        var squares = [[]];\r\n        squares.shift();\r\n        for(var j = 0; j < GLOBAL_YMAX; j++){  \r\n            var row = [];\r\n            for(var i = 0; i < GLOBAL_XMAX; i++){\r\n                document.getElementById(j+','+i).className = 'square';\r\n                if(i ===  GLOBAL_XGOAL && j ===  GLOBAL_YGOAL) {\r\n                    row.push('green');\r\n                    document.getElementById(j+','+i).className = 'green square';\r\n                }\r\n                if( i===5 && j ===5) {\r\n                    document.getElementById(j+','+i).className = 'start square';\r\n                    row.push('start');\r\n                }\r\n                else { \r\n                    row.push(null);\r\n                }\r\n            }\r\n            \r\n            squares.push(row);\r\n        }\r\n        this.setState({squares: squares, xStart: 5, yStart: 5});\r\n    }\r\n    resetWalls(){\r\n        if(this.isRunning)\r\n            return;\r\n        console.log('clearing...');\r\n        var squares = [];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n         squares = this.state.squares.slice();\r\n        for(var j = 0; j < GLOBAL_YMAX; j++){  \r\n            var row = [];\r\n            for(var i = 0; i < GLOBAL_XMAX; i++){\r\n                if(squares[j][i] !== 'wall' && squares[j][i] !== 'weight real_weight'){\r\n                    squares[j][i] = null;\r\n                    document.getElementById(j+','+i).className = 'square';\r\n                    if(i ===  GLOBAL_XGOAL && j ===  GLOBAL_YGOAL) {\r\n                        row.push('green');\r\n                        document.getElementById(j+','+i).className = 'green square';\r\n                    }\r\n                    else { \r\n                        row.push(null);\r\n                    }\r\n                } else {\r\n                    row.push(null);\r\n                }\r\n            }\r\n            \r\n            squares.push(row);\r\n        }\r\n        this.setState({squares: squares},);\r\n    }\r\n    async StartMaze(midx, midy, xmax, ymax, xmin, ymin) {\r\n        if(this.isRunning) \r\n            return;\r\n        await this.resetState();\r\n        this.isRunning = true;\r\n        var squares =[];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n            squares = this.state.squares.slice();\r\n        var i = 0;\r\n        var j = 0;\r\n        var initialize = setInterval(() => {\r\n            if(i < xmax) {\r\n                squares[0][i] = 'wall';\r\n                squares[ymax-1][i] = 'wall';\r\n                document.getElementById(0+','+i).className = 'wall square';\r\n                document.getElementById((ymax-1)+','+i).className = 'wall square';\r\n                i++;\r\n            } else if(j < ymax) {\r\n                squares[j][0] = 'wall';\r\n                squares[j][xmax-1] = 'wall';\r\n                document.getElementById(j+','+0).className = 'wall square';\r\n                document.getElementById(j+','+(xmax-1)).className = 'wall square';\r\n                j++;\r\n            }else {\r\n                var possible_xmids = [];\r\n                var possible_ymids = [];\r\n                clearInterval(initialize);\r\n                for(let k = 2; k < GLOBAL_XMAX; k+=2) {\r\n                    possible_xmids.push(k);\r\n                }\r\n                for(let k = 2; k < GLOBAL_YMAX; k+=2) {\r\n                    possible_ymids.push(k);\r\n                } \r\n                midx = possible_xmids[parseInt(possible_xmids.length/2)];\r\n                midy = possible_ymids[parseInt(possible_ymids.length/2)];\r\n                this.generateMaze(midx, midy, xmax, ymax, xmin, ymin, possible_xmids, possible_ymids);\r\n            }\r\n        }, 10)\r\n    }\r\n    async generateMaze(midx, midy, xmax, ymax, xmin, ymin, possible_xmids, possible_ymids) {\r\n        var squares =[];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n            squares = this.state.squares.slice();\r\n        if(xmax-xmin < 3 || ymax - ymin < 3 || midy == ymin || midx == xmin)  {\r\n            squares[GLOBAL_YGOAL][GLOBAL_XGOAL] = 'green';\r\n            document.getElementById(GLOBAL_YGOAL+','+GLOBAL_XGOAL).className = 'green square';\r\n            this.isRunning = false;\r\n            return;\r\n        }\r\n        //upper left\r\n        var new_midx = possible_xmids[parseInt((parseInt(xmin) + parseInt((midx-xmin)/2))/2)-1];\r\n        var new_midy = possible_ymids[parseInt((parseInt(ymin) + parseInt((midy-ymin)/2))/2)-1];\r\n        await this.generateMaze(new_midx, new_midy, midx, midy, xmin, ymin, possible_xmids, possible_ymids);\r\n\r\n        //lower left\r\n        new_midx = possible_xmids[parseInt((parseInt(xmin) + parseInt((midx-xmin)/2))/2)-1];\r\n        new_midy = possible_ymids[parseInt((parseInt(midy) + parseInt((ymax-midy)/2))/2)-1];\r\n        await this.generateMaze(new_midx, new_midy, midx, ymax, xmin, midy, possible_xmids, possible_ymids);\r\n        var x = xmin;\r\n        var y = ymin;\r\n        var holex1 = possible_xmids[randomIntFromInterval(parseInt(xmin/2), parseInt((midx-2)/2))]-1;\r\n        var holex2 = possible_xmids[randomIntFromInterval(parseInt(midx/2), parseInt((xmax-2)/2))]-1;\r\n        var holey  = possible_ymids[randomIntFromInterval(parseInt(ymin/2), parseInt((midy-2)/2))]-1;\r\n        var holey2  = possible_ymids[randomIntFromInterval(parseInt(midy/2), parseInt((ymax-2)/2))]-1;\r\n        var divide = setInterval(async () => {\r\n            if(x < xmax) {\r\n                if(!(x == this.state.xStart && y == this.state.xStart) && !(x == GLOBAL_XGOAL && y == GLOBAL_YGOAL) && x != holex1 && x != holex2) {\r\n                    squares[midy][x] = 'wall';\r\n                    document.getElementById(midy+','+x).className = 'wall square';\r\n                }\r\n                x++;\r\n            } else if(y < ymax) {\r\n                if(!(x == this.state.xStart && y == this.state.xStart) && !(x == GLOBAL_XGOAL && y == GLOBAL_YGOAL) && y != holey && y != holey2) {\r\n                    squares[y][midx] = 'wall';\r\n                    document.getElementById(y+','+midx).className = 'wall square';\r\n                }\r\n                y++;\r\n            } else {\r\n\r\n                //upper right\r\n                new_midx = possible_xmids[parseInt((parseInt(midx) + parseInt((xmax-midx)/2))/2)-1];\r\n                new_midy = possible_ymids[parseInt((parseInt(ymin) + parseInt((midy-ymin)/2))/2)-1];\r\n                await this.generateMaze(new_midx, new_midy, xmax, midy, midx, ymin, possible_xmids, possible_ymids);\r\n\r\n                //lower right\r\n                new_midx = possible_xmids[parseInt((parseInt(midx) + parseInt((xmax-midx)/2))/2)-1];\r\n                new_midy = possible_ymids[parseInt((parseInt(midy) + parseInt((ymax-midy)/2))/2)-1];\r\n                await this.generateMaze(new_midx, new_midy, xmax, ymax, midx, midy, possible_xmids, possible_ymids);\r\n                clearInterval(divide)\r\n            }\r\n        }, 10);\r\n    }\r\n    \r\n    checkPrims(squares, x, y, choice, walls) {\r\n        switch(choice) {\r\n            case 1:\r\n                return  x+2 < GLOBAL_XMAX && squares[y][x+1] != null && squares[y][x+2] != null && !this.checkQueue(walls,y,x+2);\r\n            case 2:\r\n                return y+2 < GLOBAL_YMAX && squares[y+1][x] != null && squares[y+2][x] != null && !this.checkQueue(walls,y+2,x);\r\n            case 3:\r\n                return x-2 > 0 && squares[y][x-1] != null && squares[y][x-2] != null && !this.checkQueue(walls,y,x-2);\r\n            case 4:\r\n                return y-2 > 0 && squares[y-1][x] != null && squares[y-2][x] != null && !this.checkQueue(walls,y-2,x);\r\n        }\r\n        \r\n    }\r\n    async Prims() {\r\n        if(this.isRunning) \r\n            return;\r\n        await this.resetState();\r\n        this.isRunning = true;\r\n        var squares =[];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n            squares = this.state.squares.slice();\r\n        var i = 0;\r\n        var j = 0;\r\n        var initialize = setInterval(() => {\r\n            if(i < GLOBAL_XMAX) {\r\n                for(var j = 0; j < GLOBAL_YMAX; j++) {\r\n                    if(!(i == GLOBAL_XGOAL && j == GLOBAL_YGOAL) && !(i==this.state.xStart && j == this.state.yStart)) {\r\n                        squares[j][i] = 'wall';\r\n                        document.getElementById((j)+','+i).className = 'wall square';\r\n                    }\r\n                }\r\n                i++;\r\n            }else {\r\n                clearInterval(initialize);\r\n                var walls = [];\r\n                var x = 1;\r\n                var y = 1;\r\n                walls.push([y,x+2]);\r\n                walls.push([y+2,x]);\r\n                squares[y][x] = null;\r\n                document.getElementById(y+','+x).className = 'square';\r\n                var carveMaze = setInterval(() => {\r\n                    if(walls.length != 0) {\r\n                        var wall = randomIntFromInterval(0, walls.length-1);\r\n                        x = walls[wall][1];\r\n                        y = walls[wall][0];\r\n                        squares[y][x] = null;\r\n                        if(y-2 > 0 && squares[y-2][x] == null && squares[y-1][x] != null) {\r\n                            squares[y][x] = null;\r\n                            document.getElementById(y+','+x).className = 'square';\r\n                            squares[y-1][x] = null;\r\n                            document.getElementById(y-1+','+x).className = 'square';\r\n                            if(this.checkPrims(squares,x,y,1,walls)) walls.push([y,x+2]);\r\n                            if(this.checkPrims(squares,x,y,2,walls)) walls.push([y+2,x]);\r\n                            if(this.checkPrims(squares,x,y,3,walls)) walls.push([y,x-2]);\r\n                            if(this.checkPrims(squares,x,y,4,walls)) walls.push([y-2,x]);\r\n                        } else if(x-2 > 0 && squares[y][x-2] == null && squares[y][x-1] != null) {\r\n                            squares[y][x] = null;\r\n                            document.getElementById(y+','+(x-1)).className = 'square';\r\n                            squares[y][x-1] = null;\r\n                            document.getElementById(y+','+x).className = 'square';\r\n                            if(this.checkPrims(squares,x,y,1,walls)) walls.push([y,x+2]);\r\n                            if(this.checkPrims(squares,x,y,2,walls)) walls.push([y+2,x]);\r\n                            if(this.checkPrims(squares,x,y,3,walls)) walls.push([y,x-2]);\r\n                            if(this.checkPrims(squares,x,y,4,walls)) walls.push([y-2,x]);\r\n                        } else if(x+2 < GLOBAL_XMAX && squares[y][x+2] == null && squares[y][x+1] != null) {\r\n                            squares[y][x] = null;\r\n                            document.getElementById(y+','+(x+1)).className = 'square';\r\n                            squares[y][x+1] = null;\r\n                            document.getElementById(y+','+x).className = 'square';\r\n                            if(this.checkPrims(squares,x,y,1,walls)) walls.push([y,x+2]);\r\n                            if(this.checkPrims(squares,x,y,2,walls)) walls.push([y+2,x]);\r\n                            if(this.checkPrims(squares,x,y,3,walls)) walls.push([y,x-2]);\r\n                            if(this.checkPrims(squares,x,y,4,walls)) walls.push([y-2,x]);\r\n                        } else if(y+2 < GLOBAL_YMAX && squares[y+2][x] == null && squares[y+1][x] != null) {\r\n                            squares[y][x] = null;\r\n                            document.getElementById(y+','+(x-1)).className = 'square';\r\n                            squares[y][x-1] = null;\r\n                            document.getElementById(y+','+x).className = 'square';\r\n                            if(this.checkPrims(squares,x,y,1,walls)) walls.push([y,x+2]);\r\n                            if(this.checkPrims(squares,x,y,2,walls)) walls.push([y+2,x]);\r\n                            if(this.checkPrims(squares,x,y,3,walls)) walls.push([y,x-2]);\r\n                            if(this.checkPrims(squares,x,y,4,walls)) walls.push([y-2,x]);\r\n                        }\r\n                        squares[this.state.yStart][this.state.xStart] = 'start'\r\n                        document.getElementById(this.state.yStart+','+this.state.xStart).className = 'start square';\r\n                        squares[GLOBAL_YGOAL][GLOBAL_XGOAL] = 'green';\r\n                        document.getElementById(GLOBAL_YGOAL+','+GLOBAL_XGOAL).className = 'green square';\r\n                        walls.splice(wall, 1);\r\n                    } else {\r\n                        this.isRunning = false;\r\n                        clearInterval(carveMaze);\r\n                    }\r\n                }, 10)\r\n            }\r\n        },25);\r\n    }\r\n    checkQueue(queue, y, x) {\r\n        for(var i = 0; i < queue.length; i++) {\r\n            if(queue[i][0] == y && queue[i][1] == x)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    BFS(i,j) {\r\n        if(this.isRunning)\r\n            return;\r\n        this.resetWalls();\r\n        this.isRunning = true;\r\n        var queue = [[]];\r\n        queue.push([i,j]);\r\n        queue.shift();\r\n        var paths = new Map();\r\n        let y = queue[0][0];\r\n        let x = queue[0][1]\r\n        paths.set(y+','+x,[0,null]);\r\n        var timer = 4;\r\n        var search = setInterval(() => {\r\n            for(var ii = 0; ii < timer; ii++) {\r\n                var squares = [];\r\n                for (var o = 0; o < this.state.squares.length; o++)\r\n                    squares = this.state.squares.slice();\r\n                try{\r\n                    y = queue[0][0];\r\n                    x = queue[0][1];\r\n                    if(queue.length !== 0 && !(y ===  GLOBAL_YGOAL && x ===  GLOBAL_XGOAL)) {\r\n                        let dist = 1;\r\n                        var isSet=0;\r\n                        //right\r\n                        if(x < GLOBAL_XMAX-1 && squares[y][x+1] !== 'X' && squares[y][x+1] !== 'wall' && squares[y][x+1] !== 'weight real_weight' && !this.checkQueue(queue,y,x+1)) {\r\n                            queue.push([y,x+1]);\r\n                            paths.set(y+','+(x+1),[dist, y+','+x]);\r\n                        }\r\n                        //left\r\n                        if(x > 0 && squares[y][x-1] !== 'X' && squares[y][x-1] !== 'wall' && squares[y][x-1] !== 'weight real_weight' && !this.checkQueue(queue,y,x-1)){\r\n                            queue.push([y,x-1]);\r\n                            paths.set(y+','+(x-1),[dist, y+','+x]);\r\n                        }\r\n                        //up\r\n                        if(y < GLOBAL_YMAX-1 && squares[y+1][x] !== 'X' && squares[y+1][x] !== 'wall' && squares[y+1][x] !== 'weight real_weight' && !this.checkQueue(queue,y+1,x)){\r\n                            queue.push([y+1,x]);\r\n                            paths.set((y+1)+','+x,[dist, y+','+x]);\r\n                        }\r\n                        //down\r\n                        if(y > 0 && squares[y-1][x] !== 'X' && squares[y-1][x] !== 'wall' && squares[y-1][x] !== 'weight real_weight' && !this.checkQueue(queue,y-1,x)){\r\n                            queue.push([y-1,x]);\r\n                            paths.set((y-1)+','+x,[dist, y+','+x]);\r\n                        }\r\n                        //weight right\r\n                        if( x < GLOBAL_XMAX-1 && squares[y][x+1] === 'weight real_weight') {\r\n                            squares[y][x+1] = null;\r\n                            document.getElementById(y+\",\"+x).className = squares[y][x+1] + \" square\";\r\n                            queue.push([y,x]);\r\n                        }\r\n                        //weight left\r\n                        if(x > 0 && squares[y][x-1] === 'weight real_weight'){\r\n                            squares[y][x-1] = 'weight';\r\n                            queue.push([y,x]);\r\n                        }\r\n                        //weight up\r\n                        if(y < GLOBAL_YMAX-1 && squares[y+1][x] === 'weight real_weight'){\r\n                            squares[y+1][x] = 'weight';\r\n                            queue.push([y,x]);\r\n                            document.getElementById(y+\",\"+x).className = squares[y+1][x] + \" square\";\r\n                        }\r\n                        //weight down\r\n                        if(y > 0 && squares[y-1][x] === 'weight real_weight'){\r\n                            squares[y-1][x] = 'weight';\r\n                            queue.push([y,x]);\r\n                            document.getElementById(y+\",\"+x).className = squares[y-1][x] + \" square\";\r\n                        }\r\n                        squares[y][x] = 'X';\r\n                        squares[i][j] = 'start';\r\n                        document.getElementById(y+\",\"+x).className = squares[y][x] + \" square\";\r\n                        timer = queue.length;\r\n                        queue.shift();\r\n                    } else {\r\n                        timer = 1;\r\n                        let next = paths.get( GLOBAL_YGOAL+','+ GLOBAL_XGOAL)[1].split(',');\r\n                        y = next[0];\r\n                        x = next[1];\r\n                        squares[y][x] = 'visited';\r\n                        var find_path = setInterval(() => { \r\n                            if(next !== null && !(x == j && y == i)) {\r\n                            squares[y][x] = 'visited';\r\n                            document.getElementById(y+\",\"+x).className = squares[y][x]+' square';\r\n                            next = paths.get(y+','+x)[1];\r\n                            if(next!=null){\r\n                                next = next.split(',');\r\n                                y = next[0];\r\n                                x = next[1];\r\n                            }\r\n                            \r\n                            } else {\r\n                                this.isRunning = false;\r\n                                clearInterval(find_path);\r\n                            }\r\n                        clearInterval(search);\r\n                        }, 15);\r\n                    }\r\n                } catch {\r\n                    clearInterval(find_path);\r\n                    clearInterval(search);\r\n                    this.isRunning = false;\r\n                }\r\n            }\r\n        }, 50);\r\n    }\r\n    A_star(i,j){\r\n        if(this.isRunning)\r\n            return;\r\n        this.resetWalls();\r\n        this.isRunning = true;\r\n        var dist_origin = 0;\r\n        var dist_end = Math.abs(GLOBAL_YGOAL-j) + Math.abs(GLOBAL_XGOAL-i);\r\n        var dist;\r\n        var open_list = [[]];\r\n        open_list.shift();\r\n        open_list.push([i,j,0,0]);\r\n        var paths = new Map();\r\n        paths.set(i+','+j,[0,null]);\r\n        let x = i;\r\n        let y = j;\r\n        var timer = 1;\r\n            var search = setInterval(() => {\r\n                for(var ii = 0; ii < timer/4; ii++) {\r\n                    var squares = [];\r\n                    for (var o = 0; o < this.state.squares.length; o++)\r\n                        squares = this.state.squares.slice();\r\n                        \r\n                    try{\r\n                        y = open_list[0][0];\r\n                        x = open_list[0][1];\r\n                        if(squares[y][x] == 'X'){\r\n                            open_list.shift();\r\n                            return;\r\n                        }\r\n                        dist_origin = open_list[0][3];\r\n                        dist_origin++;\r\n                        if(open_list.length > 0 && !(y === GLOBAL_YGOAL && x === GLOBAL_XGOAL)) {\r\n                            open_list.shift();\r\n                            if(x < GLOBAL_XMAX-1 && squares[y][x+1] !== 'X' && squares[y][x+1] !== 'wall' && squares[y][x+1] !== 'weight real_weight' && !this.checkQueue(open_list,y,x+1)) {\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-y) + Math.abs(GLOBAL_XGOAL-(x+1));\r\n                                dist = dist_origin + dist_end;\r\n                                open_list.push([y,x+1,dist,dist_origin]);\r\n                                paths.set(y+','+(x+1),[dist, y+','+x]);\r\n                            }\r\n                            if(x > 0 && squares[y][x-1] !== 'X' && squares[y][x-1] !== 'wall' && squares[y][x-1] !== 'weight real_weight' && !this.checkQueue(open_list,y,x-1)){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-y) + Math.abs( GLOBAL_XGOAL-(x-1));\r\n                                dist = dist_origin + dist_end;\r\n                                open_list.push([y,x-1,dist,dist_origin]);\r\n                                paths.set(y+','+(x-1),[dist, y+','+x]);\r\n                            }\r\n                            if(y < GLOBAL_YMAX-1 && squares[y+1][x] !== 'X' && squares[y+1][x] !== 'wall' && squares[y+1][x] !== 'weight real_weight' && !this.checkQueue(open_list,y+1,x)){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-(y+1)) + Math.abs( GLOBAL_XGOAL-x);\r\n                                dist = dist_origin + dist_end;\r\n                                open_list.push([y+1,x,dist,dist_origin]);\r\n                                paths.set((y+1)+','+x,[dist, y+','+x]);\r\n                            }\r\n                            if(y > 0 && squares[y-1][x] !== 'X' && squares[y-1][x] !== 'wall' && squares[y-1][x] !== 'weight real_weight' && !this.checkQueue(open_list,y-1,x)){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-(y-1)) + Math.abs( GLOBAL_XGOAL-x);\r\n                                dist = dist_origin + dist_end;\r\n                                open_list.push([y-1,x,dist,dist_origin]);\r\n                                paths.set((y-1)+','+x,[dist, y+','+x]);\r\n                            }\r\n\r\n                            if(x < GLOBAL_XMAX-1 && squares[y][x+1]  === 'weight real_weight') {\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-y) + Math.abs(GLOBAL_XGOAL-(x+1));\r\n                                dist = dist_origin + dist_end + 2; //weight of 2\r\n                                open_list.push([y,x+1,dist,dist_origin]);\r\n                                paths.set(y+','+(x+1),[dist, y+','+x]);\r\n                            }\r\n                            if(x > 0 && squares[y][x-1] !== 'X'  === 'weight real_weight'){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-y) + Math.abs( GLOBAL_XGOAL-(x-1));\r\n                                dist = dist_origin + dist_end + 2;\r\n                                open_list.push([y,x-1,dist,dist_origin]);\r\n                                paths.set(y+','+(x-1),[dist, y+','+x]);\r\n                            }\r\n                            if(y < GLOBAL_YMAX-1 && squares[y+1][x]  === 'weight real_weight'){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-(y+1)) + Math.abs( GLOBAL_XGOAL-x);\r\n                                dist = dist_origin + dist_end + 2;\r\n                                open_list.push([y+1,x,dist,dist_origin]);\r\n                                paths.set((y+1)+','+x,[dist, y+','+x]);\r\n                            }\r\n                            if(y > 0 && squares[y-1][x] !== 'X'  === 'weight real_weight'){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-(y-1)) + Math.abs( GLOBAL_XGOAL-x);\r\n                                dist = dist_origin + dist_end + 2;\r\n                                open_list.push([y-1,x,dist,dist_origin]);\r\n                                paths.set((y-1)+','+x,[dist, y+','+x]);\r\n                            }\r\n                            \r\n                            open_list.sort(function(a,b){\r\n                                return a[2]-b[2];\r\n                            });\r\n                            squares[y][x] = 'X';\r\n                            squares[i][j] = 'start';\r\n                            document.getElementById(y+\",\"+x).className = squares[y][x] + \" square\";\r\n                            timer = open_list.length;\r\n                        } else {\r\n                            timer = 1;\r\n                            let next = paths.get(GLOBAL_YGOAL+','+GLOBAL_XGOAL)[1].split(',');\r\n                            y = next[0];\r\n                            x = next[1];\r\n                            squares[y][x] = 'visited';\r\n                            var find_path = setInterval(() => { \r\n                                if(next !== null && !(x == j && y == i)) {\r\n                                    squares[y][x] = 'visited';\r\n                                    document.getElementById(y+\",\"+x).className = squares[y][x] + \" square\";\r\n                                    next = paths.get(y+','+x)[1];\r\n                                    if(next!=null){\r\n                                        next = next.split(',');\r\n                                        y = next[0];\r\n                                        x = next[1];\r\n                                    }\r\n                                } else {\r\n                                    this.isRunning = false;\r\n                                    clearInterval(find_path);\r\n                                }\r\n                            clearInterval(search);\r\n                            }, 15);\r\n                        }\r\n                    } catch {\r\n                        clearInterval(find_path);\r\n                        clearInterval(search);\r\n                        this.isRunning = false;\r\n                    }\r\n                }\r\n            }, 40);\r\n    }\r\n    toggleWall() {\r\n        this.drawOption = 1;\r\n        document.getElementById(\"w\").classList.add(\"active\");\r\n        document.getElementById(\"we\").classList.remove(\"active\");\r\n        document.getElementById(\"er\").classList.remove(\"active\");\r\n    }\r\n    toggleWeight() {\r\n        this.drawOption = 2;\r\n        document.getElementById(\"w\").classList.remove(\"active\");\r\n        document.getElementById(\"we\").classList.add(\"active\");\r\n        document.getElementById(\"er\").classList.remove(\"active\");\r\n    }\r\n    toggleErase() {\r\n        this.drawOption = 3;\r\n        document.getElementById(\"w\").classList.remove(\"active\");\r\n        document.getElementById(\"we\").classList.remove(\"active\");\r\n        document.getElementById(\"er\").classList.add(\"active\");\r\n    }\r\n    addWall(i,j){\r\n        if(this.drawOption == undefined) this.drawOption = 1;\r\n        if(this.isMouseDown){\r\n            var squares = [];\r\n            for (var o = 0; o < this.state.squares.length; o++)\r\n                squares = this.state.squares.slice();\r\n            if(squares[i][j] == 'green' || squares[i][j] == 'start'){\r\n            } else if (this.drawOption == 2){\r\n                squares[i][j] = 'weight real_weight';\r\n                document.getElementById(i+\",\"+j).className = 'weight real_weight square';\r\n            } else if (this.drawOption == 1) {\r\n                squares[i][j] = 'wall';\r\n                document.getElementById(i+\",\"+j).className = 'wall square';\r\n            } else if (this.drawOption == 3) {\r\n                squares[i][j] = null;\r\n                document.getElementById(i+\",\"+j).className = 'square';\r\n            }\r\n        }\r\n    }\r\n    toggleMouseDown(){\r\n        this.isMouseDown = true;\r\n    }\r\n    toggleMouseUp(){\r\n        this.isMouseDown = false;\r\n    }\r\n    moveStart(i,j){\r\n        var squares = [];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n            squares = this.state.squares.slice();\r\n        var xStart = this.state.xStart;\r\n        var yStart = this.state.yStart;\r\n        squares[xStart][yStart] = null;\r\n        document.getElementById(xStart+\",\"+yStart).className = \"square\";\r\n        squares[i][j] = 'start';\r\n        document.getElementById(i+\",\"+j).className = squares[i][j] + \" square\";\r\n        xStart = i;\r\n        yStart = j;\r\n        this.setState({squares: squares, xStart: xStart, yStart: yStart})\r\n    }   \r\n    renderSquare(i,j) {\r\n        return (\r\n        <Square\r\n            value={this.state.squares[i][j]}\r\n            onClick={() => this.moveStart(i,j)}\r\n            clas={this.state.class}\r\n            onMouseOver={() => this.addWall(i,j)}\r\n            onMouseDown={() => this.toggleMouseDown()}\r\n            onMouseUp={() => this.toggleMouseUp()}\r\n            isMouseDown ={this.isMouseDown}\r\n            isWalls={this.isWalls}\r\n            location ={[i]+','+[j]}\r\n            y = {i}\r\n            x ={j}\r\n        />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let status;\r\n        \r\n        const items = [[]];\r\n        for(var x = 0; x < GLOBAL_YMAX; x++) {\r\n            var row = [];\r\n            for(var j = 0; j < GLOBAL_XMAX; j++){\r\n                row.push(this.renderSquare(x,j));\r\n                if(j===GLOBAL_XMAX-1)\r\n                    items.push(row);\r\n            }\r\n            \r\n        }\r\n        const board_ = [];\r\n        for (const [index] of items.entries()) {\r\n            board_.push(<div className=\"board-row\">{items[index]}</div>);\r\n        }\r\n        \r\n        return (\r\n        \r\n        <div>\r\n\r\n        <nav className=\"navbar navbar-dark dark\">\r\n            <a className=\"navbar-brand\" href=\"#\"><img src=\"path.png\"></img> <div className=\"logo\">Pathfinder</div></a>\r\n            <div className=\"nav-center\">\r\n                <div className=\"btn-grouping\">\r\n                    <NavButton variant=\"contained\" color=\"primary\" id=\"w\"  className=\"active\" onClick={() => this.toggleWall()}> Add Walls</NavButton>\r\n                    <NavButton variant=\"contained\" color=\"primary\" id=\"we\" onClick={() => this.toggleWeight()}> Add Weights</NavButton>\r\n                    <NavButton variant=\"contained\" color=\"primary\" id=\"er\" onClick={() => this.toggleErase()}> Eraser</NavButton>\r\n                </div>\r\n                <div className=\"btn-grouping\">\r\n                    <NavButton variant=\"contained\" color=\"primary\" onClick={() => this.BFS(this.state.xStart,this.state.yStart)}> Dijsktra's</NavButton>\r\n                    <NavButton variant=\"contained\" color=\"primary\" onClick={() => this.A_star(this.state.xStart,this.state.yStart)}> A*</NavButton>\r\n                </div>\r\n                <div className=\"btn-grouping\">\r\n                    <NavButton variant=\"contained\" color=\"primary\" onClick={() => this.StartMaze(parseInt(GLOBAL_XMAX/2), parseInt(GLOBAL_YMAX/2), GLOBAL_XMAX, GLOBAL_YMAX, 0, 0)}> Recursive Maze</NavButton>\r\n                    <NavButton variant=\"contained\" color=\"primary\" onClick={() => this.Prims()}> Prim's Maze</NavButton>\r\n                </div>\r\n                <div className=\"btn-grouping\">\r\n                    <ClearButton variant=\"contained\" color=\"secondary\" onClick={() => this.resetState()}> Reset Board</ClearButton>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n             \r\n        <div className=\"status\">{status}</div>\r\n            {board_}\r\n        </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nconst NavButton = withStyles({\r\n    root: {\r\n      margin: '5px 8px',\r\n      background: 'rgb(96, 69, 251)',\r\n      color: 'white',\r\n    },\r\n})(Button);\r\n\r\nconst ClearButton = withStyles({\r\n    root: {\r\n      margin: '5px 8px',\r\n      maxHeight: '36px',\r\n      width: 'fit-content',\r\n      whiteSpace: 'nowrap'\r\n    },\r\n})(Button);\r\n\r\nclass Game extends React.Component {\r\nrender() {\r\n    return (\r\n    <div className=\"game-board\">\r\n        <Board />\r\n    </div>\r\n    );\r\n}\r\n}\r\n\r\n// ========================================\r\nconst domContainer = document.querySelector('#root');\r\nReactDOM.render(<Game />,domContainer);\r\n"],"sourceRoot":""}