{"version":3,"sources":["index.js"],"names":["GLOBAL_XMAX","parseInt","window","innerWidth","GLOBAL_YMAX","innerHeight","GLOBAL_XGOAL","GLOBAL_YGOAL","randomIntFromInterval","min","max","Math","floor","random","Square","props","y","x","id","location","className","onClick","onMouseUp","onMouseDown","onMouseOver","console","log","Board","square_board","shift","j","row","i","push","state","squares","xStart","yStart","isWalls","isRunning","this","document","getElementById","setState","o","length","slice","midx","midy","xmax","ymax","xmin","ymin","resetState","initialize","setInterval","possible_xmids","possible_ymids","clearInterval","k","generateMaze","new_midx","new_midy","holex1","holex2","holey","holey2","divide","a","choice","walls","checkQueue","carveMaze","wall","checkPrims","splice","queue","resetWalls","paths","Map","set","timer","search","ii","find_path","next","get","split","dist","dist_origin","dist_end","abs","open_list","sort","b","classList","add","remove","isMouseDown","undefined","value","moveStart","clas","class","addWall","toggleMouseDown","toggleMouseUp","items","renderSquare","board_","entries","index","href","src","NavButton","variant","color","toggleWall","toggleWeight","BFS","A_star","StartMaze","Prims","ClearButton","status","React","Component","withStyles","root","margin","background","Button","Game","domContainer","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.b95009f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nlet GLOBAL_XMAX = parseInt((window.innerWidth-100)/25);\r\nGLOBAL_XMAX % 2 == 0 ? GLOBAL_XMAX++: GLOBAL_XMAX+=0;\r\nlet GLOBAL_YMAX = parseInt((window.innerHeight-100)/25);\r\nGLOBAL_YMAX % 2 == 0 ? GLOBAL_YMAX++: GLOBAL_YMAX+=0;\r\nconst GLOBAL_XGOAL = parseInt(GLOBAL_XMAX*.70);\r\nconst GLOBAL_YGOAL = parseInt(GLOBAL_YMAX*(3/4));\r\nfunction randomIntFromInterval(min, max) { // min and max included \r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nconsole.log(GLOBAL_XMAX, GLOBAL_YMAX)\r\nfunction Square(props) {\r\n    if(props.y==GLOBAL_YGOAL && props.x == GLOBAL_XGOAL) {\r\n        return (\r\n            <button id={props.location} className={'green square'} onClick={props.onClick} onMouseUp={props.onMouseUp} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver}></button>\r\n        );\r\n    } \r\n    if(props.y==5 && props.x ==5){\r\n        return (\r\n            <button id={props.location} className={'start square'} onClick={props.onClick} onMouseUp={props.onMouseUp} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver}></button>\r\n        );\r\n    }\r\n    return (\r\n        <button id={props.location} className={'square'} onClick={props.onClick} onMouseUp={props.onMouseUp} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver}></button>\r\n    );\r\n  }\r\n\r\nclass Board extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var square_board = [[]];\r\n        square_board.shift();\r\n        for(var j = 0; j < GLOBAL_YMAX; j++){  \r\n            var row = [];\r\n            for(var i = 0; i < GLOBAL_XMAX; i++){\r\n                if(i === GLOBAL_XGOAL && j === GLOBAL_YGOAL)\r\n                    row.push('green')\r\n                else \r\n                    row.push(null);\r\n            }\r\n            square_board.push(row);\r\n        }\r\n        var xStart = 5;\r\n        var yStart = 5;\r\n        var isWalls = true;\r\n        var isRunning = false;\r\n        square_board[xStart][yStart] = 'start';\r\n        this.state = {\r\n            squares: square_board,\r\n            xStart: xStart,\r\n            yStart: yStart,\r\n            isWalls: isWalls,\r\n            isRunning: isRunning,\r\n        };\r\n    }\r\n    resetState(){\r\n        if(this.isRunning)\r\n            return;\r\n        console.log('clearing...');\r\n        var squares = [[]];\r\n        squares.shift();\r\n        for(var j = 0; j < GLOBAL_YMAX; j++){  \r\n            var row = [];\r\n            for(var i = 0; i < GLOBAL_XMAX; i++){\r\n                document.getElementById(j+','+i).className = 'square';\r\n                if(i ===  GLOBAL_XGOAL && j ===  GLOBAL_YGOAL) {\r\n                    row.push('green');\r\n                    document.getElementById(j+','+i).className = 'green square';\r\n                }\r\n                if( i===5 && j ===5) {\r\n                    document.getElementById(j+','+i).className = 'start square';\r\n                    row.push('start');\r\n                }\r\n                else { \r\n                    row.push(null);\r\n                }\r\n            }\r\n            \r\n            squares.push(row);\r\n        }\r\n        this.setState({squares: squares, xStart: 5, yStart: 5});\r\n    }\r\n    resetWalls(){\r\n        if(this.isRunning)\r\n            return;\r\n        console.log('clearing...');\r\n        var squares = [];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n         squares = this.state.squares.slice();\r\n        for(var j = 0; j < GLOBAL_YMAX; j++){  \r\n            var row = [];\r\n            for(var i = 0; i < GLOBAL_XMAX; i++){\r\n                if(squares[j][i] !== 'wall' && squares[j][i] !== 'weight real_weight'){\r\n                    squares[j][i] = null;\r\n                    document.getElementById(j+','+i).className = 'square';\r\n                    if(i ===  GLOBAL_XGOAL && j ===  GLOBAL_YGOAL) {\r\n                        row.push('green');\r\n                        document.getElementById(j+','+i).className = 'green square';\r\n                    }\r\n                    else { \r\n                        row.push(null);\r\n                    }\r\n                } else {\r\n                    row.push(null);\r\n                }\r\n            }\r\n            \r\n            squares.push(row);\r\n        }\r\n        this.setState({squares: squares},);\r\n    }\r\n    async StartMaze(midx, midy, xmax, ymax, xmin, ymin) {\r\n        if(this.isRunning) \r\n            return;\r\n        await this.resetState();\r\n        this.isRunning = true;\r\n        var squares =[];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n            squares = this.state.squares.slice();\r\n        var i = 0;\r\n        var j = 0;\r\n        var initialize = setInterval(() => {\r\n            if(i < xmax) {\r\n                squares[0][i] = 'wall';\r\n                squares[ymax-1][i] = 'wall';\r\n                document.getElementById(0+','+i).className = 'wall square';\r\n                document.getElementById((ymax-1)+','+i).className = 'wall square';\r\n                i++;\r\n            } else if(j < ymax) {\r\n                squares[j][0] = 'wall';\r\n                squares[j][xmax-1] = 'wall';\r\n                document.getElementById(j+','+0).className = 'wall square';\r\n                document.getElementById(j+','+(xmax-1)).className = 'wall square';\r\n                j++;\r\n            }else {\r\n                var possible_xmids = [];\r\n                var possible_ymids = [];\r\n                clearInterval(initialize);\r\n                for(let k = 2; k < GLOBAL_XMAX; k+=2) {\r\n                    possible_xmids.push(k);\r\n                }\r\n                for(let k = 2; k < GLOBAL_YMAX; k+=2) {\r\n                    possible_ymids.push(k);\r\n                } \r\n                midx = possible_xmids[parseInt(possible_xmids.length/2)];\r\n                midy = possible_ymids[parseInt(possible_ymids.length/2)];\r\n                this.generateMaze(midx, midy, xmax, ymax, xmin, ymin, possible_xmids, possible_ymids);\r\n            }\r\n        }, 10)\r\n    }\r\n    async generateMaze(midx, midy, xmax, ymax, xmin, ymin, possible_xmids, possible_ymids) {\r\n        var squares =[];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n            squares = this.state.squares.slice();\r\n        if(xmax-xmin < 3 || ymax - ymin < 3 || midy == ymin || midx == xmin)  {\r\n            squares[GLOBAL_YGOAL][GLOBAL_XGOAL] = 'green';\r\n            document.getElementById(GLOBAL_YGOAL+','+GLOBAL_XGOAL).className = 'green square';\r\n            this.isRunning = false;\r\n            return;\r\n        }\r\n        //upper left\r\n        var new_midx = possible_xmids[parseInt((parseInt(xmin) + parseInt((midx-xmin)/2))/2)-1];\r\n        var new_midy = possible_ymids[parseInt((parseInt(ymin) + parseInt((midy-ymin)/2))/2)-1];\r\n        await this.generateMaze(new_midx, new_midy, midx, midy, xmin, ymin, possible_xmids, possible_ymids);\r\n\r\n        //lower left\r\n        new_midx = possible_xmids[parseInt((parseInt(xmin) + parseInt((midx-xmin)/2))/2)-1];\r\n        new_midy = possible_ymids[parseInt((parseInt(midy) + parseInt((ymax-midy)/2))/2)-1];\r\n        await this.generateMaze(new_midx, new_midy, midx, ymax, xmin, midy, possible_xmids, possible_ymids);\r\n        var x = xmin;\r\n        var y = ymin;\r\n        var holex1 = possible_xmids[randomIntFromInterval(parseInt(xmin/2), parseInt((midx-2)/2))]-1;\r\n        var holex2 = possible_xmids[randomIntFromInterval(parseInt(midx/2), parseInt((xmax-2)/2))]-1;\r\n        var holey  = possible_ymids[randomIntFromInterval(parseInt(ymin/2), parseInt((midy-2)/2))]-1;\r\n        var holey2  = possible_ymids[randomIntFromInterval(parseInt(midy/2), parseInt((ymax-2)/2))]-1;\r\n        var divide = setInterval(async () => {\r\n            if(x < xmax) {\r\n                if(!(x == this.state.xStart && y == this.state.xStart) && !(x == GLOBAL_XGOAL && y == GLOBAL_YGOAL) && x != holex1 && x != holex2) {\r\n                    squares[midy][x] = 'wall';\r\n                    document.getElementById(midy+','+x).className = 'wall square';\r\n                }\r\n                x++;\r\n            } else if(y < ymax) {\r\n                if(!(x == this.state.xStart && y == this.state.xStart) && !(x == GLOBAL_XGOAL && y == GLOBAL_YGOAL) && y != holey && y != holey2) {\r\n                    squares[y][midx] = 'wall';\r\n                    document.getElementById(y+','+midx).className = 'wall square';\r\n                }\r\n                y++;\r\n            } else {\r\n\r\n                //upper right\r\n                new_midx = possible_xmids[parseInt((parseInt(midx) + parseInt((xmax-midx)/2))/2)-1];\r\n                new_midy = possible_ymids[parseInt((parseInt(ymin) + parseInt((midy-ymin)/2))/2)-1];\r\n                await this.generateMaze(new_midx, new_midy, xmax, midy, midx, ymin, possible_xmids, possible_ymids);\r\n\r\n                //lower right\r\n                new_midx = possible_xmids[parseInt((parseInt(midx) + parseInt((xmax-midx)/2))/2)-1];\r\n                new_midy = possible_ymids[parseInt((parseInt(midy) + parseInt((ymax-midy)/2))/2)-1];\r\n                await this.generateMaze(new_midx, new_midy, xmax, ymax, midx, midy, possible_xmids, possible_ymids);\r\n                clearInterval(divide)\r\n            }\r\n        }, 10);\r\n    }\r\n    \r\n    checkPrims(squares, x, y, choice, walls) {\r\n        switch(choice) {\r\n            case 1:\r\n                return  x+2 < GLOBAL_XMAX && squares[y][x+1] != null && squares[y][x+2] != null && !this.checkQueue(walls,y,x+2);\r\n            case 2:\r\n                return y+2 < GLOBAL_YMAX && squares[y+1][x] != null && squares[y+2][x] != null && !this.checkQueue(walls,y+2,x);\r\n            case 3:\r\n                return x-2 > 0 && squares[y][x-1] != null && squares[y][x-2] != null && !this.checkQueue(walls,y,x-2);\r\n            case 4:\r\n                return y-2 > 0 && squares[y-1][x] != null && squares[y-2][x] != null && !this.checkQueue(walls,y-2,x);\r\n        }\r\n        \r\n    }\r\n    async Prims() {\r\n        if(this.isRunning) \r\n            return;\r\n        await this.resetState();\r\n        this.isRunning = true;\r\n        var squares =[];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n            squares = this.state.squares.slice();\r\n        var i = 0;\r\n        var j = 0;\r\n        var initialize = setInterval(() => {\r\n            if(i < GLOBAL_XMAX) {\r\n                for(var j = 0; j < GLOBAL_YMAX; j++) {\r\n                    if(!(i == GLOBAL_XGOAL && j == GLOBAL_YGOAL) && !(i==this.state.xStart && j == this.state.yStart)) {\r\n                        squares[j][i] = 'wall';\r\n                        document.getElementById((j)+','+i).className = 'wall square';\r\n                    }\r\n                }\r\n                i++;\r\n            }else {\r\n                clearInterval(initialize);\r\n                var walls = [];\r\n                var x = 1;\r\n                var y = 1;\r\n                walls.push([y,x+2]);\r\n                walls.push([y+2,x]);\r\n                squares[y][x] = null;\r\n                document.getElementById(y+','+x).className = 'square';\r\n                var carveMaze = setInterval(() => {\r\n                    if(walls.length != 0) {\r\n                        var wall = randomIntFromInterval(0, walls.length-1);\r\n                        x = walls[wall][1];\r\n                        y = walls[wall][0];\r\n                        squares[y][x] = null;\r\n                        if(y-2 > 0 && squares[y-2][x] == null && squares[y-1][x] != null) {\r\n                            squares[y][x] = null;\r\n                            document.getElementById(y+','+x).className = 'square';\r\n                            squares[y-1][x] = null;\r\n                            document.getElementById(y-1+','+x).className = 'square';\r\n                            if(this.checkPrims(squares,x,y,1,walls)) walls.push([y,x+2]);\r\n                            if(this.checkPrims(squares,x,y,2,walls)) walls.push([y+2,x]);\r\n                            if(this.checkPrims(squares,x,y,3,walls)) walls.push([y,x-2]);\r\n                            if(this.checkPrims(squares,x,y,4,walls)) walls.push([y-2,x]);\r\n                        } else if(x-2 > 0 && squares[y][x-2] == null && squares[y][x-1] != null) {\r\n                            squares[y][x] = null;\r\n                            document.getElementById(y+','+(x-1)).className = 'square';\r\n                            squares[y][x-1] = null;\r\n                            document.getElementById(y+','+x).className = 'square';\r\n                            if(this.checkPrims(squares,x,y,1,walls)) walls.push([y,x+2]);\r\n                            if(this.checkPrims(squares,x,y,2,walls)) walls.push([y+2,x]);\r\n                            if(this.checkPrims(squares,x,y,3,walls)) walls.push([y,x-2]);\r\n                            if(this.checkPrims(squares,x,y,4,walls)) walls.push([y-2,x]);\r\n                        } else if(x+2 < GLOBAL_XMAX && squares[y][x+2] == null && squares[y][x+1] != null) {\r\n                            squares[y][x] = null;\r\n                            document.getElementById(y+','+(x+1)).className = 'square';\r\n                            squares[y][x+1] = null;\r\n                            document.getElementById(y+','+x).className = 'square';\r\n                            if(this.checkPrims(squares,x,y,1,walls)) walls.push([y,x+2]);\r\n                            if(this.checkPrims(squares,x,y,2,walls)) walls.push([y+2,x]);\r\n                            if(this.checkPrims(squares,x,y,3,walls)) walls.push([y,x-2]);\r\n                            if(this.checkPrims(squares,x,y,4,walls)) walls.push([y-2,x]);\r\n                        } else if(y+2 < GLOBAL_YMAX && squares[y+2][x] == null && squares[y+1][x] != null) {\r\n                            squares[y][x] = null;\r\n                            document.getElementById(y+','+(x-1)).className = 'square';\r\n                            squares[y][x-1] = null;\r\n                            document.getElementById(y+','+x).className = 'square';\r\n                            if(this.checkPrims(squares,x,y,1,walls)) walls.push([y,x+2]);\r\n                            if(this.checkPrims(squares,x,y,2,walls)) walls.push([y+2,x]);\r\n                            if(this.checkPrims(squares,x,y,3,walls)) walls.push([y,x-2]);\r\n                            if(this.checkPrims(squares,x,y,4,walls)) walls.push([y-2,x]);\r\n                        }\r\n                        squares[this.state.yStart][this.state.xStart] = 'start'\r\n                        document.getElementById(this.state.yStart+','+this.state.xStart).className = 'start square';\r\n                        squares[GLOBAL_YGOAL][GLOBAL_XGOAL] = 'green';\r\n                        document.getElementById(GLOBAL_YGOAL+','+GLOBAL_XGOAL).className = 'green square';\r\n                        walls.splice(wall, 1);\r\n                    } else {\r\n                        this.isRunning = false;\r\n                        clearInterval(carveMaze);\r\n                    }\r\n                }, 10)\r\n            }\r\n        },25);\r\n    }\r\n    checkQueue(queue, y, x) {\r\n        for(var i = 0; i < queue.length; i++) {\r\n            if(queue[i][0] == y && queue[i][1] == x)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    BFS(i,j) {\r\n        if(this.isRunning)\r\n            return;\r\n        this.resetWalls();\r\n        this.isRunning = true;\r\n        var queue = [[]];\r\n        queue.push([i,j]);\r\n        queue.shift();\r\n        var paths = new Map();\r\n        let y = queue[0][0];\r\n        let x = queue[0][1]\r\n        paths.set(y+','+x,[0,null]);\r\n        var timer = 4;\r\n        var search = setInterval(() => {\r\n            for(var ii = 0; ii < timer; ii++) {\r\n                var squares = [];\r\n                for (var o = 0; o < this.state.squares.length; o++)\r\n                    squares = this.state.squares.slice();\r\n                try{\r\n                    y = queue[0][0];\r\n                    x = queue[0][1];\r\n                    if(queue.length !== 0 && !(y ===  GLOBAL_YGOAL && x ===  GLOBAL_XGOAL)) {\r\n                        let dist = 1;\r\n                        var isSet=0;\r\n                        //right\r\n                        if(x < GLOBAL_XMAX-1 && squares[y][x+1] !== 'X' && squares[y][x+1] !== 'wall' && squares[y][x+1] !== 'weight real_weight' && !this.checkQueue(queue,y,x+1)) {\r\n                            queue.push([y,x+1]);\r\n                            paths.set(y+','+(x+1),[dist, y+','+x]);\r\n                        }\r\n                        //left\r\n                        if(x > 0 && squares[y][x-1] !== 'X' && squares[y][x-1] !== 'wall' && squares[y][x-1] !== 'weight real_weight' && !this.checkQueue(queue,y,x-1)){\r\n                            queue.push([y,x-1]);\r\n                            paths.set(y+','+(x-1),[dist, y+','+x]);\r\n                        }\r\n                        //up\r\n                        if(y < GLOBAL_YMAX-1 && squares[y+1][x] !== 'X' && squares[y+1][x] !== 'wall' && squares[y+1][x] !== 'weight real_weight' && !this.checkQueue(queue,y+1,x)){\r\n                            queue.push([y+1,x]);\r\n                            paths.set((y+1)+','+x,[dist, y+','+x]);\r\n                        }\r\n                        //down\r\n                        if(y > 0 && squares[y-1][x] !== 'X' && squares[y-1][x] !== 'wall' && squares[y-1][x] !== 'weight real_weight' && !this.checkQueue(queue,y-1,x)){\r\n                            queue.push([y-1,x]);\r\n                            paths.set((y-1)+','+x,[dist, y+','+x]);\r\n                        }\r\n                        //weight right\r\n                        if( x < GLOBAL_XMAX-1 && squares[y][x+1] === 'weight real_weight') {\r\n                            squares[y][x+1] = null;\r\n                            document.getElementById(y+\",\"+x).className = squares[y][x+1] + \" square\";\r\n                            queue.push([y,x]);\r\n                        }\r\n                        //weight left\r\n                        if(x > 0 && squares[y][x-1] === 'weight real_weight'){\r\n                            squares[y][x-1] = 'weight';\r\n                            queue.push([y,x]);\r\n                        }\r\n                        //weight up\r\n                        if(y < GLOBAL_YMAX-1 && squares[y+1][x] === 'weight real_weight'){\r\n                            squares[y+1][x] = 'weight';\r\n                            queue.push([y,x]);\r\n                            document.getElementById(y+\",\"+x).className = squares[y+1][x] + \" square\";\r\n                        }\r\n                        //weight down\r\n                        if(y > 0 && squares[y-1][x] === 'weight real_weight'){\r\n                            squares[y-1][x] = 'weight';\r\n                            queue.push([y,x]);\r\n                            document.getElementById(y+\",\"+x).className = squares[y-1][x] + \" square\";\r\n                        }\r\n                        squares[y][x] = 'X';\r\n                        squares[i][j] = 'start';\r\n                        document.getElementById(y+\",\"+x).className = squares[y][x] + \" square\";\r\n                        timer = queue.length;\r\n                        queue.shift();\r\n                    } else {\r\n                        timer = 1;\r\n                        let next = paths.get( GLOBAL_YGOAL+','+ GLOBAL_XGOAL)[1].split(',');\r\n                        y = next[0];\r\n                        x = next[1];\r\n                        squares[y][x] = 'visited';\r\n                        var find_path = setInterval(() => { \r\n                            if(next !== null && !(x == j && y == i)) {\r\n                            squares[y][x] = 'visited';\r\n                            document.getElementById(y+\",\"+x).className = squares[y][x]+' square';\r\n                            next = paths.get(y+','+x)[1];\r\n                            if(next!=null){\r\n                                next = next.split(',');\r\n                                y = next[0];\r\n                                x = next[1];\r\n                            }\r\n                            \r\n                            } else {\r\n                                this.isRunning = false;\r\n                                clearInterval(find_path);\r\n                            }\r\n                        clearInterval(search);\r\n                        }, 15);\r\n                    }\r\n                } catch {\r\n                    clearInterval(find_path);\r\n                    clearInterval(search);\r\n                    this.isRunning = false;\r\n                }\r\n            }\r\n        }, 50);\r\n    }\r\n    A_star(i,j){\r\n        if(this.isRunning)\r\n            return;\r\n        this.resetWalls();\r\n        this.isRunning = true;\r\n        var dist_origin = 0;\r\n        var dist_end = Math.abs(GLOBAL_YGOAL-j) + Math.abs(GLOBAL_XGOAL-i);\r\n        var dist;\r\n        var open_list = [[]];\r\n        open_list.shift();\r\n        open_list.push([i,j,0,0]);\r\n        var paths = new Map();\r\n        paths.set(i+','+j,[0,null]);\r\n        let x = i;\r\n        let y = j;\r\n        var timer = 1;\r\n            var search = setInterval(() => {\r\n                for(var ii = 0; ii < timer/4; ii++) {\r\n                    var squares = [];\r\n                    for (var o = 0; o < this.state.squares.length; o++)\r\n                        squares = this.state.squares.slice();\r\n                        \r\n                    try{\r\n                        y = open_list[0][0];\r\n                        x = open_list[0][1];\r\n                        if(squares[y][x] == 'X'){\r\n                            open_list.shift();\r\n                            return;\r\n                        }\r\n                        dist_origin = open_list[0][3];\r\n                        dist_origin++;\r\n                        if(open_list.length > 0 && !(y === GLOBAL_YGOAL && x === GLOBAL_XGOAL)) {\r\n                            open_list.shift();\r\n                            if(x < GLOBAL_XMAX-1 && squares[y][x+1] !== 'X' && squares[y][x+1] !== 'wall' && squares[y][x+1] !== 'weight real_weight' && !this.checkQueue(open_list,y,x+1)) {\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-y) + Math.abs(GLOBAL_XGOAL-(x+1));\r\n                                dist = dist_origin + dist_end;\r\n                                open_list.push([y,x+1,dist,dist_origin]);\r\n                                paths.set(y+','+(x+1),[dist, y+','+x]);\r\n                            }\r\n                            if(x > 0 && squares[y][x-1] !== 'X' && squares[y][x-1] !== 'wall' && squares[y][x-1] !== 'weight real_weight' && !this.checkQueue(open_list,y,x-1)){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-y) + Math.abs( GLOBAL_XGOAL-(x-1));\r\n                                dist = dist_origin + dist_end;\r\n                                open_list.push([y,x-1,dist,dist_origin]);\r\n                                paths.set(y+','+(x-1),[dist, y+','+x]);\r\n                            }\r\n                            if(y < GLOBAL_YMAX-1 && squares[y+1][x] !== 'X' && squares[y+1][x] !== 'wall' && squares[y+1][x] !== 'weight real_weight' && !this.checkQueue(open_list,y+1,x)){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-(y+1)) + Math.abs( GLOBAL_XGOAL-x);\r\n                                dist = dist_origin + dist_end;\r\n                                open_list.push([y+1,x,dist,dist_origin]);\r\n                                paths.set((y+1)+','+x,[dist, y+','+x]);\r\n                            }\r\n                            if(y > 0 && squares[y-1][x] !== 'X' && squares[y-1][x] !== 'wall' && squares[y-1][x] !== 'weight real_weight' && !this.checkQueue(open_list,y-1,x)){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-(y-1)) + Math.abs( GLOBAL_XGOAL-x);\r\n                                dist = dist_origin + dist_end;\r\n                                open_list.push([y-1,x,dist,dist_origin]);\r\n                                paths.set((y-1)+','+x,[dist, y+','+x]);\r\n                            }\r\n\r\n                            if(x < GLOBAL_XMAX-1 && squares[y][x+1]  === 'weight real_weight') {\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-y) + Math.abs(GLOBAL_XGOAL-(x+1));\r\n                                dist = dist_origin + dist_end + 2; //weight of 2\r\n                                open_list.push([y,x+1,dist,dist_origin]);\r\n                                paths.set(y+','+(x+1),[dist, y+','+x]);\r\n                            }\r\n                            if(x > 0 && squares[y][x-1] !== 'X'  === 'weight real_weight'){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-y) + Math.abs( GLOBAL_XGOAL-(x-1));\r\n                                dist = dist_origin + dist_end + 2;\r\n                                open_list.push([y,x-1,dist,dist_origin]);\r\n                                paths.set(y+','+(x-1),[dist, y+','+x]);\r\n                            }\r\n                            if(y < GLOBAL_YMAX-1 && squares[y+1][x]  === 'weight real_weight'){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-(y+1)) + Math.abs( GLOBAL_XGOAL-x);\r\n                                dist = dist_origin + dist_end + 2;\r\n                                open_list.push([y+1,x,dist,dist_origin]);\r\n                                paths.set((y+1)+','+x,[dist, y+','+x]);\r\n                            }\r\n                            if(y > 0 && squares[y-1][x] !== 'X'  === 'weight real_weight'){\r\n                                dist_end = Math.abs( GLOBAL_YGOAL-(y-1)) + Math.abs( GLOBAL_XGOAL-x);\r\n                                dist = dist_origin + dist_end + 2;\r\n                                open_list.push([y-1,x,dist,dist_origin]);\r\n                                paths.set((y-1)+','+x,[dist, y+','+x]);\r\n                            }\r\n                            \r\n                            open_list.sort(function(a,b){\r\n                                return a[2]-b[2];\r\n                            });\r\n                            squares[y][x] = 'X';\r\n                            squares[i][j] = 'start';\r\n                            document.getElementById(y+\",\"+x).className = squares[y][x] + \" square\";\r\n                            timer = open_list.length;\r\n                        } else {\r\n                            timer = 1;\r\n                            let next = paths.get(GLOBAL_YGOAL+','+GLOBAL_XGOAL)[1].split(',');\r\n                            y = next[0];\r\n                            x = next[1];\r\n                            squares[y][x] = 'visited';\r\n                            var find_path = setInterval(() => { \r\n                                if(next !== null && !(x == j && y == i)) {\r\n                                    squares[y][x] = 'visited';\r\n                                    document.getElementById(y+\",\"+x).className = squares[y][x] + \" square\";\r\n                                    next = paths.get(y+','+x)[1];\r\n                                    if(next!=null){\r\n                                        next = next.split(',');\r\n                                        y = next[0];\r\n                                        x = next[1];\r\n                                    }\r\n                                } else {\r\n                                    this.isRunning = false;\r\n                                    clearInterval(find_path);\r\n                                }\r\n                            clearInterval(search);\r\n                            }, 15);\r\n                        }\r\n                    } catch {\r\n                        clearInterval(find_path);\r\n                        clearInterval(search);\r\n                        this.isRunning = false;\r\n                    }\r\n                }\r\n            }, 40);\r\n    }\r\n    toggleWall(){\r\n        this.isWalls = true;\r\n        document.getElementById(\"w\").classList.add(\"active\");\r\n        document.getElementById(\"we\").classList.remove(\"active\");\r\n    }\r\n    toggleWeight(){\r\n        this.isWalls = false;\r\n        document.getElementById(\"w\").classList.remove(\"active\");\r\n        document.getElementById(\"we\").classList.add(\"active\");\r\n    }\r\n    addWall(i,j){\r\n        if(this.isMouseDown){\r\n            var squares = [];\r\n            for (var o = 0; o < this.state.squares.length; o++)\r\n                squares = this.state.squares.slice();\r\n            if(squares[i][j] == 'green' || squares[i][j] == 'start'){\r\n            } else if (!this.isWalls && this.isWalls!=undefined){\r\n                squares[i][j] = 'weight real_weight';\r\n                document.getElementById(i+\",\"+j).className = 'weight real_weight square';\r\n            } else if (squares[i][j] == 'wall'){\r\n                squares[i][j] = null;\r\n                document.getElementById(i+\",\"+j).className = 'square';\r\n            } else {\r\n                squares[i][j] = 'wall';\r\n                document.getElementById(i+\",\"+j).className = 'wall square';\r\n            }\r\n           // this.setState({squares: squares});\r\n        }\r\n    }\r\n    toggleMouseDown(){\r\n        this.isMouseDown = true;\r\n    }\r\n    toggleMouseUp(){\r\n        this.isMouseDown = false;\r\n    }\r\n    moveStart(i,j){\r\n        var squares = [];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n            squares = this.state.squares.slice();\r\n        var xStart = this.state.xStart;\r\n        var yStart = this.state.yStart;\r\n        squares[xStart][yStart] = null;\r\n        document.getElementById(xStart+\",\"+yStart).className = \"square\";\r\n        squares[i][j] = 'start';\r\n        document.getElementById(i+\",\"+j).className = squares[i][j] + \" square\";\r\n        xStart = i;\r\n        yStart = j;\r\n        this.setState({squares: squares, xStart: xStart, yStart: yStart})\r\n    }   \r\n    renderSquare(i,j) {\r\n        return (\r\n        <Square\r\n            value={this.state.squares[i][j]}\r\n            onClick={() => this.moveStart(i,j)}\r\n            clas={this.state.class}\r\n            onMouseOver={() => this.addWall(i,j)}\r\n            onMouseDown={() => this.toggleMouseDown()}\r\n            onMouseUp={() => this.toggleMouseUp()}\r\n            isMouseDown ={this.isMouseDown}\r\n            isWalls={this.isWalls}\r\n            location ={[i]+','+[j]}\r\n            y = {i}\r\n            x ={j}\r\n        />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let status;\r\n        \r\n        const items = [[]];\r\n        for(var x = 0; x < GLOBAL_YMAX; x++) {\r\n            var row = [];\r\n            for(var j = 0; j < GLOBAL_XMAX; j++){\r\n                row.push(this.renderSquare(x,j));\r\n                if(j===GLOBAL_XMAX-1)\r\n                    items.push(row);\r\n            }\r\n            \r\n        }\r\n        const board_ = [];\r\n        for (const [index] of items.entries()) {\r\n            board_.push(<div className=\"board-row\">{items[index]}</div>);\r\n        }\r\n        \r\n        return (\r\n        \r\n        <div>\r\n\r\n        <nav className=\"navbar navbar-dark dark\">\r\n            <a className=\"navbar-brand\" href=\"#\"><img src=\"path.png\"></img> <div className=\"logo\">Pathfinder</div></a>\r\n            <div className=\"nav-center\">\r\n                <div className=\"btn-grouping\">\r\n                    <NavButton variant=\"contained\" color=\"primary\" id=\"w\"  className=\"active\" onClick={() => this.toggleWall()}> Add Walls</NavButton>\r\n                    <NavButton variant=\"contained\" color=\"primary\" id=\"we\" onClick={() => this.toggleWeight()}> Add Weights</NavButton>\r\n                </div>\r\n                <div className=\"btn-grouping\">\r\n                    <NavButton variant=\"contained\" color=\"primary\" onClick={() => this.BFS(this.state.xStart,this.state.yStart)}> Dijsktra's</NavButton>\r\n                    <NavButton variant=\"contained\" color=\"primary\" onClick={() => this.A_star(this.state.xStart,this.state.yStart)}> A*</NavButton>\r\n                </div>\r\n                <div className=\"btn-grouping\">\r\n                    <NavButton variant=\"contained\" color=\"primary\" onClick={() => this.StartMaze(parseInt(GLOBAL_XMAX/2), parseInt(GLOBAL_YMAX/2), GLOBAL_XMAX, GLOBAL_YMAX, 0, 0)}> Recursive Maze</NavButton>\r\n                    <NavButton variant=\"contained\" color=\"primary\" onClick={() => this.Prims()}> Prim's Maze</NavButton>\r\n                </div>\r\n                <div className=\"btn-grouping\">\r\n                    <ClearButton variant=\"contained\" color=\"secondary\" onClick={() => this.resetState()}> Reset Board</ClearButton>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n             \r\n        <div className=\"status\">{status}</div>\r\n            {board_}\r\n        </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nconst NavButton = withStyles({\r\n    root: {\r\n      margin: '5px 8px',\r\n      background: 'rgb(96, 69, 251)',\r\n      color: 'white',\r\n    },\r\n})(Button);\r\n\r\nconst ClearButton = withStyles({\r\n    root: {\r\n      margin: '5px 8px',\r\n    },\r\n})(Button);\r\n\r\nclass Game extends React.Component {\r\nrender() {\r\n    return (\r\n    <div className=\"game\">\r\n        <div className=\"game-board\">\r\n        <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n}\r\n\r\n// ========================================\r\nconst domContainer = document.querySelector('#root');\r\nReactDOM.render(<Game />,domContainer);\r\n"],"sourceRoot":""}