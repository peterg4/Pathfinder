{"version":3,"sources":["index.js"],"names":["GLOBAL_XMAX","parseInt","window","innerWidth","GLOBAL_YMAX","innerHeight","GLOBAL_XGOAL","GLOBAL_YGOAL","Square","props","y","x","id","location","className","onClick","onMouseUp","onMouseDown","onMouseOver","console","log","Board","square_board","shift","j","row","i","push","state","squares","xStart","yStart","isWalls","isRunning","this","document","getElementById","setState","o","length","slice","resetWalls","queue","paths","Map","set","timer","search","setInterval","ii","find_path","next","get","split","clearInterval","isSet","resetState","dist","dist_origin","dist_end","Math","abs","open_list","sort","a","b","isMouseDown","undefined","value","moveStart","clas","class","addWall","toggleMouseDown","toggleMouseUp","items","renderSquare","board_","entries","index","href","src","toggleWall","toggleWeight","BFS","A_star","status","React","Component","Game","domContainer","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.364266ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nconst GLOBAL_XMAX = parseInt((window.innerWidth-100)/25);\r\nconst GLOBAL_YMAX = parseInt((window.innerHeight-100)/25);\r\nconst GLOBAL_XGOAL = parseInt(GLOBAL_XMAX*.70);\r\nconst GLOBAL_YGOAL = parseInt(GLOBAL_YMAX/2);\r\n\r\nconsole.log(GLOBAL_XMAX, GLOBAL_YMAX)\r\nfunction Square(props) {\r\n    if(props.y==GLOBAL_YGOAL && props.x == GLOBAL_XGOAL) {\r\n        return (\r\n            <button id={props.location} className={'green square'} onClick={props.onClick} onMouseUp={props.onMouseUp} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver}></button>\r\n        );\r\n    } \r\n    if(props.y==5 && props.x ==5){\r\n        return (\r\n            <button id={props.location} className={'start square'} onClick={props.onClick} onMouseUp={props.onMouseUp} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver}></button>\r\n        );\r\n    }\r\n    return (\r\n        <button id={props.location} className={'square'} onClick={props.onClick} onMouseUp={props.onMouseUp} onMouseDown={props.onMouseDown} onMouseOver={props.onMouseOver}></button>\r\n    );\r\n  }\r\n\r\nclass Board extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var square_board = [[]];\r\n        square_board.shift();\r\n        for(var j = 0; j < GLOBAL_YMAX; j++){  \r\n            var row = [];\r\n            for(var i = 0; i < GLOBAL_XMAX; i++){\r\n                if(i === GLOBAL_XGOAL && j === GLOBAL_YGOAL)\r\n                    row.push('green')\r\n                else \r\n                    row.push(null);\r\n            }\r\n            square_board.push(row);\r\n        }\r\n        var xStart = 5;\r\n        var yStart = 5;\r\n        var isWalls = true;\r\n        var isRunning = false;\r\n        square_board[xStart][yStart] = 'start';\r\n        this.state = {\r\n            squares: square_board,\r\n            xStart: xStart,\r\n            yStart: yStart,\r\n            isWalls: isWalls,\r\n            isRunning: isRunning,\r\n        };\r\n    }\r\n    resetState(){\r\n        if(this.isRunning)\r\n            return;\r\n        console.log('clearing...');\r\n        var squares = [[]];\r\n        squares.shift();\r\n        for(var j = 0; j < GLOBAL_YMAX; j++){  \r\n            var row = [];\r\n            for(var i = 0; i < GLOBAL_XMAX; i++){\r\n                document.getElementById(j+','+i).className = 'square';\r\n                if(i ===  GLOBAL_XGOAL && j ===  GLOBAL_YGOAL) {\r\n                    row.push('green');\r\n                    document.getElementById(j+','+i).className = 'green square';\r\n                }\r\n                if( i===5 && j ===5) {\r\n                    document.getElementById(j+','+i).className = 'start square';\r\n                    row.push('start');\r\n                }\r\n                else { \r\n                    row.push(null);\r\n                }\r\n            }\r\n            \r\n            squares.push(row);\r\n        }\r\n        this.setState({squares: squares, xStart: 5, yStart: 5});\r\n    }\r\n    resetWalls(){\r\n        if(this.isRunning)\r\n            return;\r\n        console.log('clearing...');\r\n        var squares = [];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n         squares = this.state.squares.slice();\r\n        for(var j = 0; j < GLOBAL_YMAX; j++){  \r\n            var row = [];\r\n            for(var i = 0; i < GLOBAL_XMAX; i++){\r\n                if(squares[j][i] !== 'wall' && squares[j][i] !== 'weight real_weight'){\r\n                    squares[j][i] = null;\r\n                    document.getElementById(j+','+i).className = 'square';\r\n                    if(i ===  GLOBAL_XGOAL && j ===  GLOBAL_YGOAL) {\r\n                        row.push('green');\r\n                        document.getElementById(j+','+i).className = 'green square';\r\n                    }\r\n                    else { \r\n                        row.push(null);\r\n                    }\r\n                } else {\r\n                    row.push(null);\r\n                }\r\n            }\r\n            \r\n            squares.push(row);\r\n        }\r\n        this.setState({squares: squares},);\r\n    }\r\n    BFS(i,j) {\r\n        if(this.isRunning)\r\n            return;\r\n        this.resetWalls();\r\n        this.isRunning = true;\r\n        var queue = [[]];\r\n        queue.push([i,j]);\r\n        queue.shift();\r\n        var paths = new Map();\r\n        let y = queue[0][0];\r\n        let x = queue[0][1]\r\n        paths.set(y+','+x,[0,null]);\r\n        var timer = 8;\r\n        var search = setInterval(() => {\r\n            for(var ii = 0; ii < timer/8; ii++) {\r\n                var squares = [];\r\n                for (var o = 0; o < this.state.squares.length; o++)\r\n                    squares = this.state.squares.slice();\r\n                try{\r\n                    y = queue[0][0];\r\n                    x = queue[0][1];\r\n                    if(queue.length !== 0 && !(y ===  GLOBAL_YGOAL && x ===  GLOBAL_XGOAL)) {\r\n                        if(squares[y][x] !== 'X') { \r\n                            let dist = 1;\r\n                            var isSet=0;\r\n                            if(squares[y][x] == 'X'){\r\n                                queue.shift();\r\n                                return;\r\n                            }\r\n                            if(squares[y][x] == 'weight') {\r\n                                console.log('here')\r\n                                squares[y][x] = null;\r\n                                queue.push([y,x]);\r\n                                this.setState({squares: squares}); \r\n                                return;\r\n                            }\r\n                        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n                            if(x < GLOBAL_XMAX-1 && squares[y][x+1] !== 'X' && squares[y][x+1] !== 'wall' && squares[y][x+1] !== 'weight real_weight') {\r\n                                queue.push([y,x+1]);\r\n                                paths.set(y+','+(x+1),[dist, y+','+x]);\r\n                            }\r\n                            if(x > 0 && squares[y][x-1] !== 'X' && squares[y][x-1] !== 'wall' && squares[y][x-1] !== 'weight real_weight'){\r\n                                queue.push([y,x-1]);\r\n                                paths.set(y+','+(x-1),[dist, y+','+x]);\r\n                            }\r\n\r\n                            if(y < GLOBAL_YMAX-1 && squares[y+1][x] !== 'X' && squares[y+1][x] !== 'wall' && squares[y+1][x] !== 'weight real_weight'){\r\n                                queue.push([y+1,x]);\r\n                                paths.set((y+1)+','+x,[dist, y+','+x]);\r\n                            }\r\n\r\n                            if(y > 0 && squares[y-1][x] !== 'X' && squares[y-1][x] !== 'wall' && squares[y-1][x] !== 'weight real_weight'){\r\n                                queue.push([y-1,x]);\r\n                                paths.set((y-1)+','+x,[dist, y+','+x]);\r\n                            }\r\n                        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n                            if( x < GLOBAL_XMAX-1 && squares[y][x+1] === 'weight real_weight') {\r\n                                squares[y][x+1] = 'weight';\r\n                                document.getElementById(y+\",\"+x).className = squares[y][x+1] + \" square\";\r\n                                queue.push([y,x]);\r\n                                squares[y][x] = null;\r\n                                isSet = 1;\r\n                           //     paths.set(y+','+(x+1),[dist, y+','+x]); \r\n                            }\r\n                            if(x > 0 && squares[y][x-1] === 'weight real_weight'){\r\n                                squares[y][x-1] = 'weight';\r\n                                queue.push([y,x]);\r\n                                squares[y][x] = null;\r\n                                isSet = 1;\r\n                                document.getElementById(y+\",\"+x).className = squares[y][x-1] + \" square\";\r\n                          //    paths.set(y+','+(x-1),[dist, y+','+x]);\r\n                            }\r\n                            if(y < GLOBAL_YMAX-1 && squares[y+1][x] === 'weight real_weight'){\r\n                                squares[y+1][x] = 'weight';\r\n                                queue.push([y,x]);\r\n                                squares[y][x] = null;\r\n                                isSet = 1;\r\n                                document.getElementById(y+\",\"+x).className = squares[y+1][x] + \" square\";\r\n                         //       paths.set((y+1)+','+x,[dist, y+','+x]);\r\n                            }\r\n                            if(y > 0 && squares[y-1][x] === 'weight real_weight'){\r\n                                squares[y-1][x] = 'weight';\r\n                                queue.push([y,x]);\r\n                                squares[y][x] = null;\r\n                                isSet = 1;\r\n                                document.getElementById(y+\",\"+x).className = squares[y-1][x] + \" square\";\r\n                            //    paths.set((y-1)+','+x,[dist, y+','+x]);\r\n                            }\r\n                            if(!isSet)\r\n                                squares[y][x] = 'X';\r\n                            squares[i][j] = 'start';\r\n                            document.getElementById(y+\",\"+x).className = squares[y][x] + \" square\";\r\n                        }\r\n                        timer = queue.length;\r\n                        queue.shift();\r\n                    } else {\r\n                        timer = 1;\r\n                        let next = paths.get( GLOBAL_YGOAL+','+ GLOBAL_XGOAL)[1].split(',');\r\n                        y = next[0];\r\n                        x = next[1];\r\n                        squares[y][x] = 'visited';\r\n                        var find_path = setInterval(() => { \r\n                            if(next !== null && !(x == j && y == i)) {\r\n                            squares[y][x] = 'visited';\r\n                            document.getElementById(y+\",\"+x).className = squares[y][x]+' square';\r\n                            next = paths.get(y+','+x)[1];\r\n                            if(next!=null){\r\n                                next = next.split(',');\r\n                                y = next[0];\r\n                                x = next[1];\r\n                            }\r\n                            \r\n                            } else {\r\n                            clearInterval(find_path);\r\n                            }\r\n                        clearInterval(search);\r\n                        }, 200);\r\n                        this.isRunning = false;\r\n                    }\r\n                } catch {\r\n                    clearInterval(find_path);\r\n                    clearInterval(search);\r\n                    this.isRunning = false;\r\n                    this.resetState();\r\n                }\r\n            }\r\n        //    timer++;\r\n        },1);\r\n    }\r\n    A_star(i,j){\r\n        if(this.isRunning)\r\n            return;\r\n        this.resetWalls();\r\n        this.isRunning = true;\r\n        var dist_origin = 0;\r\n        var dist_end = Math.abs(GLOBAL_YGOAL-j) + Math.abs(GLOBAL_XGOAL-i);\r\n        var dist;\r\n        var open_list = [[]];\r\n        open_list.shift();\r\n        open_list.push([i,j,0,0]);\r\n        var paths = new Map();\r\n        paths.set(i+','+j,[0,null]);\r\n        let x = i;\r\n        let y = j;\r\n        var timer = 1;\r\n            var search = setInterval(() => {\r\n                for(var ii = 0; ii < timer; ii++) {\r\n                    var squares = [];\r\n                    for (var o = 0; o < this.state.squares.length; o++)\r\n                        squares = this.state.squares.slice();\r\n                        \r\n                    try{\r\n                        y = open_list[0][0];\r\n                        x = open_list[0][1];\r\n                        if(squares[y][x] == 'X'){\r\n                            open_list.shift();\r\n                            return;\r\n                        }\r\n                        dist_origin = open_list[0][3];\r\n                        dist_origin++;\r\n                        if(open_list.length > 0 && !(y === GLOBAL_YGOAL && x === GLOBAL_XGOAL)) {\r\n                            open_list.shift();\r\n                            if(squares[y][x] !== 'X') { \r\n                                if(x < GLOBAL_XMAX-1 && squares[y][x+1] !== 'X' && squares[y][x+1] !== 'wall') {\r\n                                //    dist_origin = Math.abs(y-j) + Math.abs(x+1-i)+1;\r\n                                    dist_end = Math.abs( GLOBAL_YGOAL-y) + Math.abs(GLOBAL_XGOAL-(x+1));\r\n                                    dist = dist_origin + dist_end;\r\n                                    open_list.push([y,x+1,dist,dist_origin]);\r\n                                    paths.set(y+','+(x+1),[dist, y+','+x]);\r\n                                }\r\n                                \r\n                                if(x > 0 && squares[y][x-1] !== 'X' && squares[y][x-1] !== 'wall'){\r\n                            //      dist_origin = Math.abs(y-j) + Math.abs(x-1-i)+1;\r\n                                    dist_end = Math.abs( GLOBAL_YGOAL-y) + Math.abs( GLOBAL_XGOAL-(x-1));\r\n                                    dist = dist_origin + dist_end;\r\n                                    open_list.push([y,x-1,dist,dist_origin]);\r\n                                    paths.set(y+','+(x-1),[dist, y+','+x]);\r\n                                }\r\n        \r\n                                if(y < GLOBAL_YMAX-1 && squares[y+1][x] !== 'X' && squares[y+1][x] !== 'wall'){\r\n                            //      dist_origin = Math.abs(y+1-j) + Math.abs(x-i)+1;\r\n                                    dist_end = Math.abs( GLOBAL_YGOAL-(y+1)) + Math.abs( GLOBAL_XGOAL-x);\r\n                                    dist = dist_origin + dist_end;\r\n                                    open_list.push([y+1,x,dist,dist_origin]);\r\n                                    paths.set((y+1)+','+x,[dist, y+','+x]);\r\n                                }\r\n        \r\n                                if(y > 0 && squares[y-1][x] !== 'X' && squares[y-1][x] !== 'wall'){\r\n                                //    dist_origin = Math.abs(y-1-j) + Math.abs(x-i)+1;\r\n                                    dist_end = Math.abs( GLOBAL_YGOAL-(y-1)) + Math.abs( GLOBAL_XGOAL-x);\r\n                                    dist = dist_origin + dist_end;\r\n                                    open_list.push([y-1,x,dist,dist_origin]);\r\n                                    paths.set((y-1)+','+x,[dist, y+','+x]);\r\n                                }\r\n                                \r\n                                open_list.sort(function(a,b){\r\n                                    return a[2]-b[2];\r\n                                });\r\n                                squares[y][x] = 'X';\r\n                                squares[i][j] = 'start';\r\n                                document.getElementById(y+\",\"+x).className = squares[y][x] + \" square\";\r\n                                timer = open_list.length;\r\n                            }\r\n                        } else {\r\n                            timer = 1;\r\n                            let next = paths.get(GLOBAL_YGOAL+','+GLOBAL_XGOAL)[1].split(',');\r\n                            y = next[0];\r\n                            x = next[1];\r\n                            squares[y][x] = 'visited';\r\n                            var find_path = setInterval(() => { \r\n                                if(next !== null && !(x == j && y == i)) {\r\n                                    squares[y][x] = 'visited';\r\n                                    document.getElementById(y+\",\"+x).className = squares[y][x] + \" square\";\r\n                                    next = paths.get(y+','+x)[1];\r\n                                    if(next!=null){\r\n                                        next = next.split(',');\r\n                                        y = next[0];\r\n                                        x = next[1];\r\n                                    }\r\n                                } else {\r\n                                    clearInterval(find_path);\r\n                                }\r\n                            clearInterval(search);\r\n                            }, 200);\r\n                            this.isRunning = false;\r\n                        }\r\n                    } catch {\r\n                        clearInterval(find_path);\r\n                        clearInterval(search);\r\n                        this.isRunning = false;\r\n                        this.resetState();\r\n                    }\r\n                }\r\n            }, 1);\r\n    }\r\n    toggleWall(){\r\n        this.isWalls = true;\r\n        document.getElementById(\"w\").className = \"navbar-toggler reset first active\";\r\n        document.getElementById(\"we\").className = \"navbar-toggler reset\";\r\n    }\r\n    toggleWeight(){\r\n        this.isWalls = false;\r\n        document.getElementById(\"w\").className = \"navbar-toggler reset first\";\r\n        document.getElementById(\"we\").className = \"navbar-toggler reset active\";\r\n    }\r\n    addWall(i,j){\r\n        if(this.isMouseDown){\r\n            var squares = [];\r\n            for (var o = 0; o < this.state.squares.length; o++)\r\n                squares = this.state.squares.slice();\r\n            if(squares[i][j] == 'green' || squares[i][j] == 'start'){\r\n            } else if (!this.isWalls && this.isWalls!=undefined){\r\n                squares[i][j] = 'weight real_weight';\r\n                document.getElementById(i+\",\"+j).className = 'weight real_weight square';\r\n            } else if (squares[i][j] == 'wall'){\r\n                squares[i][j] = null;\r\n                document.getElementById(i+\",\"+j).className = 'square';\r\n            } else {\r\n                squares[i][j] = 'wall';\r\n                document.getElementById(i+\",\"+j).className = 'wall square';\r\n            }\r\n           // this.setState({squares: squares});\r\n        }\r\n    }\r\n    toggleMouseDown(){\r\n        this.isMouseDown = true;\r\n    }\r\n    toggleMouseUp(){\r\n        this.isMouseDown = false;\r\n    }\r\n    moveStart(i,j){\r\n        var squares = [];\r\n        for (var o = 0; o < this.state.squares.length; o++)\r\n            squares = this.state.squares.slice();\r\n        var xStart = this.state.xStart;\r\n        var yStart = this.state.yStart;\r\n        squares[xStart][yStart] = null;\r\n        document.getElementById(xStart+\",\"+yStart).className = \"square\";\r\n        squares[i][j] = 'start';\r\n        document.getElementById(i+\",\"+j).className = squares[i][j] + \" square\";\r\n        xStart = i;\r\n        yStart = j;\r\n        this.setState({squares: squares, xStart: xStart, yStart: yStart})\r\n    }   \r\n    renderSquare(i,j) {\r\n        return (\r\n        <Square\r\n            value={this.state.squares[i][j]}\r\n            onClick={() => this.moveStart(i,j)}\r\n            clas={this.state.class}\r\n            onMouseOver={() => this.addWall(i,j)}\r\n            onMouseDown={() => this.toggleMouseDown()}\r\n            onMouseUp={() => this.toggleMouseUp()}\r\n            isMouseDown ={this.isMouseDown}\r\n            isWalls={this.isWalls}\r\n            location ={[i]+','+[j]}\r\n            y = {i}\r\n            x ={j}\r\n        />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let status;\r\n        \r\n        const items = [[]];\r\n        for(var x = 0; x < GLOBAL_YMAX; x++) {\r\n            var row = [];\r\n            for(var j = 0; j < GLOBAL_XMAX; j++){\r\n                row.push(this.renderSquare(x,j));\r\n                if(j===GLOBAL_XMAX-1)\r\n                    items.push(row);\r\n            }\r\n            \r\n        }\r\n        const board_ = [];\r\n        for (const [index] of items.entries()) {\r\n            board_.push(<div className=\"board-row\">{items[index]}</div>);\r\n        }\r\n        \r\n        return (\r\n        \r\n        <div>\r\n\r\n        <nav className=\"navbar navbar-dark dark\">\r\n            <a className=\"navbar-brand\" href=\"#\"><img src=\"path.png\"></img> <div className=\"logo\">Pathfinder</div></a>\r\n            <button id=\"w\" className=\"navbar-toggler reset first active\"onClick={() => this.toggleWall()}> Add Walls</button>\r\n            <button id=\"we\" className=\"navbar-toggler reset\"onClick={() => this.toggleWeight()}> Add Weights</button>\r\n            <button className=\"navbar-toggler reset\"onClick={() => this.BFS(this.state.xStart,this.state.yStart)}> Dijsktra's</button>\r\n            <button className=\"navbar-toggler reset\"onClick={() => this.A_star(this.state.xStart,this.state.yStart)}> A*</button>\r\n        <button className=\"navbar-toggler reset\"onClick={() => this.resetState()}> Reset Board</button>\r\n        </nav>\r\n             \r\n        <div className=\"status\">{status}</div>\r\n            {board_}\r\n        </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\nrender() {\r\n    return (\r\n    <div className=\"game\">\r\n        <div className=\"game-board\">\r\n        <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n}\r\n\r\n// ========================================\r\nconst domContainer = document.querySelector('#root');\r\nReactDOM.render(<Game />,domContainer);\r\n"],"sourceRoot":""}